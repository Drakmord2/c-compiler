/*
 * generated by Xtext 2.12.0
 */
grammar InternalC;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package com.poli.compilador.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.poli.compilador.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.poli.compilador.services.CGrammarAccess;

}

@parser::members {

 	private CGrammarAccess grammarAccess;

    public InternalCParser(TokenStream input, CGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Program";
   	}

   	@Override
   	protected CGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleProgram
entryRuleProgram returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProgramRule()); }
	iv_ruleProgram=ruleProgram
	{ $current=$iv_ruleProgram.current; }
	EOF;

// Rule Program
ruleProgram returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getProgramAccess().getDefinitionDefinitionParserRuleCall_0());
			}
			lv_definition_0_0=ruleDefinition
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getProgramRule());
				}
				add(
					$current,
					"definition",
					lv_definition_0_0,
					"com.poli.compilador.C.Definition");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleDefinition
entryRuleDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefinitionRule()); }
	iv_ruleDefinition=ruleDefinition
	{ $current=$iv_ruleDefinition.current; }
	EOF;

// Rule Definition
ruleDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDefinitionAccess().getStructParserRuleCall_0());
		}
		this_Struct_0=ruleStruct
		{
			$current = $this_Struct_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDefinitionAccess().getFunctionParserRuleCall_1());
		}
		this_Function_1=ruleFunction
		{
			$current = $this_Function_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDefinitionAccess().getDeclarationParserRuleCall_2());
		}
		this_Declaration_2=ruleDeclaration
		{
			$current = $this_Declaration_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFunctionAccess().getFunctionAction_0(),
					$current);
			}
		)
		otherlv_1='function'
		{
			newLeafNode(otherlv_1, grammarAccess.getFunctionAccess().getFunctionKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionAccess().getTipoTypeParserRuleCall_2_0());
				}
				lv_tipo_2_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionRule());
					}
					set(
						$current,
						"tipo",
						lv_tipo_2_0,
						"com.poli.compilador.C.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionAccess().getParamsIdDefParserRuleCall_5_0_0());
					}
					lv_params_5_0=ruleIdDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionRule());
						}
						add(
							$current,
							"params",
							lv_params_5_0,
							"com.poli.compilador.C.IdDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getFunctionAccess().getCommaKeyword_5_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionAccess().getParamsIdDefParserRuleCall_5_1_1_0());
						}
						lv_params_7_0=ruleIdDef
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionRule());
							}
							add(
								$current,
								"params",
								lv_params_7_0,
								"com.poli.compilador.C.IdDef");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_6());
		}
		otherlv_9='{'
		{
			newLeafNode(otherlv_9, grammarAccess.getFunctionAccess().getLeftCurlyBracketKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionAccess().getCommandsCommandParserRuleCall_8_0());
				}
				lv_commands_10_0=ruleCommand
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionRule());
					}
					add(
						$current,
						"commands",
						lv_commands_10_0,
						"com.poli.compilador.C.Command");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getFunctionAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleDeclaration
entryRuleDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarationRule()); }
	iv_ruleDeclaration=ruleDeclaration
	{ $current=$iv_ruleDeclaration.current; }
	EOF;

// Rule Declaration
ruleDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDeclarationAccess().getDeclarationAction_0(),
					$current);
			}
		)
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getDeclarationAccess().getTipoTypeParserRuleCall_1_0_0_0());
						}
						lv_tipo_1_0=ruleType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDeclarationRule());
							}
							set(
								$current,
								"tipo",
								lv_tipo_1_0,
								"com.poli.compilador.C.Type");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_2='**'
					{
						newLeafNode(otherlv_2, grammarAccess.getDeclarationAccess().getAsteriskAsteriskKeyword_1_0_1());
					}
				)?
				(
					(
						lv_name_3_0=RULE_ID
						{
							newLeafNode(lv_name_3_0, grammarAccess.getDeclarationAccess().getNameIDTerminalRuleCall_1_0_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDeclarationRule());
							}
							setWithLastConsumed(
								$current,
								"name",
								lv_name_3_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getDeclarationAccess().getValAssignmentParserRuleCall_1_0_3_0());
						}
						lv_val_4_0=ruleAssignment
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDeclarationRule());
							}
							set(
								$current,
								"val",
								lv_val_4_0,
								"com.poli.compilador.C.Assignment");
							afterParserOrEnumRuleCall();
						}
					)
				)?
			)
			    |
			(
				otherlv_5='struct'
				{
					newLeafNode(otherlv_5, grammarAccess.getDeclarationAccess().getStructKeyword_1_1_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDeclarationRule());
							}
						}
						otherlv_6=RULE_ID
						{
							newLeafNode(otherlv_6, grammarAccess.getDeclarationAccess().getStrStructCrossReference_1_1_1_0());
						}
					)
				)
				(
					(
						lv_name_7_0=RULE_ID
						{
							newLeafNode(lv_name_7_0, grammarAccess.getDeclarationAccess().getNameIDTerminalRuleCall_1_1_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDeclarationRule());
							}
							setWithLastConsumed(
								$current,
								"name",
								lv_name_7_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
			)
		)
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getDeclarationAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleStruct
entryRuleStruct returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStructRule()); }
	iv_ruleStruct=ruleStruct
	{ $current=$iv_ruleStruct.current; }
	EOF;

// Rule Struct
ruleStruct returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStructAccess().getStructAction_0(),
					$current);
			}
		)
		otherlv_1='struct'
		{
			newLeafNode(otherlv_1, grammarAccess.getStructAccess().getStructKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getStructAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStructRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getStructAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStructAccess().getDeclDeclarationParserRuleCall_4_0());
				}
				lv_decl_4_0=ruleDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStructRule());
					}
					add(
						$current,
						"decl",
						lv_decl_4_0,
						"com.poli.compilador.C.Declaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getStructAccess().getRightCurlyBracketKeyword_5());
		}
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getStructAccess().getSemicolonKeyword_6());
		}
	)
;

// Entry rule entryRuleIdDef
entryRuleIdDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIdDefRule()); }
	iv_ruleIdDef=ruleIdDef
	{ $current=$iv_ruleIdDef.current; }
	EOF;

// Rule IdDef
ruleIdDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getIdDefAccess().getTipoTypeParserRuleCall_0_0());
				}
				lv_tipo_0_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIdDefRule());
					}
					set(
						$current,
						"tipo",
						lv_tipo_0_0,
						"com.poli.compilador.C.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIdDefAccess().getNameVariableParserRuleCall_1_0());
				}
				lv_name_1_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIdDefRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"com.poli.compilador.C.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	iv_ruleVariable=ruleVariable
	{ $current=$iv_ruleVariable.current; }
	EOF;

// Rule Variable
ruleVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getVariableAccess().getVariableAction_0_0(),
						$current);
				}
			)
			this_ID_1=RULE_ID
			{
				newLeafNode(this_ID_1, grammarAccess.getVariableAccess().getIDTerminalRuleCall_0_1());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getVariableAccess().getPointerExpParserRuleCall_1());
		}
		this_PointerExp_2=rulePointerExp
		{
			$current = $this_PointerExp_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCommand
entryRuleCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommandRule()); }
	iv_ruleCommand=ruleCommand
	{ $current=$iv_ruleCommand.current; }
	EOF;

// Rule Command
ruleCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getCommandAccess().getIfCmdAction_0_0(),
						$current);
				}
			)
			otherlv_1='if'
			{
				newLeafNode(otherlv_1, grammarAccess.getCommandAccess().getIfKeyword_0_1());
			}
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getCommandAccess().getLeftParenthesisKeyword_0_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandAccess().getExpExpressionParserRuleCall_0_3_0());
					}
					lv_exp_3_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandRule());
						}
						set(
							$current,
							"exp",
							lv_exp_3_0,
							"com.poli.compilador.C.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getCommandAccess().getRightParenthesisKeyword_0_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandAccess().getTrueCommandsCommandBlockParserRuleCall_0_5_0());
					}
					lv_trueCommands_5_0=ruleCommandBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandRule());
						}
						set(
							$current,
							"trueCommands",
							lv_trueCommands_5_0,
							"com.poli.compilador.C.CommandBlock");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6='else'
				{
					newLeafNode(otherlv_6, grammarAccess.getCommandAccess().getElseKeyword_0_6_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCommandAccess().getFalseCommandsCommandBlockParserRuleCall_0_6_1_0());
						}
						lv_falseCommands_7_0=ruleCommandBlock
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCommandRule());
							}
							set(
								$current,
								"falseCommands",
								lv_falseCommands_7_0,
								"com.poli.compilador.C.CommandBlock");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getCommandAccess().getWhileCmdAction_1_0(),
						$current);
				}
			)
			otherlv_9='while'
			{
				newLeafNode(otherlv_9, grammarAccess.getCommandAccess().getWhileKeyword_1_1());
			}
			otherlv_10='('
			{
				newLeafNode(otherlv_10, grammarAccess.getCommandAccess().getLeftParenthesisKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandAccess().getExpExpressionParserRuleCall_1_3_0());
					}
					lv_exp_11_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandRule());
						}
						set(
							$current,
							"exp",
							lv_exp_11_0,
							"com.poli.compilador.C.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_12=')'
			{
				newLeafNode(otherlv_12, grammarAccess.getCommandAccess().getRightParenthesisKeyword_1_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandAccess().getCommandsCommandBlockParserRuleCall_1_5_0());
					}
					lv_commands_13_0=ruleCommandBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandRule());
						}
						set(
							$current,
							"commands",
							lv_commands_13_0,
							"com.poli.compilador.C.CommandBlock");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getCommandAccess().getForCmdAction_2_0(),
						$current);
				}
			)
			otherlv_15='for'
			{
				newLeafNode(otherlv_15, grammarAccess.getCommandAccess().getForKeyword_2_1());
			}
			otherlv_16='('
			{
				newLeafNode(otherlv_16, grammarAccess.getCommandAccess().getLeftParenthesisKeyword_2_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandAccess().getInitLValueParserRuleCall_2_3_0());
					}
					lv_init_17_0=rulelValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandRule());
						}
						add(
							$current,
							"init",
							lv_init_17_0,
							"com.poli.compilador.C.lValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandAccess().getInitAssignmentParserRuleCall_2_4_0());
					}
					lv_init_18_0=ruleAssignment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandRule());
						}
						add(
							$current,
							"init",
							lv_init_18_0,
							"com.poli.compilador.C.Assignment");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_19=';'
			{
				newLeafNode(otherlv_19, grammarAccess.getCommandAccess().getSemicolonKeyword_2_5());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandAccess().getExpExpressionParserRuleCall_2_6_0());
					}
					lv_exp_20_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandRule());
						}
						set(
							$current,
							"exp",
							lv_exp_20_0,
							"com.poli.compilador.C.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_21=';'
			{
				newLeafNode(otherlv_21, grammarAccess.getCommandAccess().getSemicolonKeyword_2_7());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandAccess().getIncFactorParserRuleCall_2_8_0());
					}
					lv_inc_22_0=ruleFactor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandRule());
						}
						add(
							$current,
							"inc",
							lv_inc_22_0,
							"com.poli.compilador.C.Factor");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandAccess().getIncAssignmentParserRuleCall_2_9_0());
					}
					lv_inc_23_0=ruleAssignment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandRule());
						}
						add(
							$current,
							"inc",
							lv_inc_23_0,
							"com.poli.compilador.C.Assignment");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_24=')'
			{
				newLeafNode(otherlv_24, grammarAccess.getCommandAccess().getRightParenthesisKeyword_2_10());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandAccess().getCommandsCommandBlockParserRuleCall_2_11_0());
					}
					lv_commands_25_0=ruleCommandBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandRule());
						}
						set(
							$current,
							"commands",
							lv_commands_25_0,
							"com.poli.compilador.C.CommandBlock");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getCommandAccess().getSwitchCmdAction_3_0(),
						$current);
				}
			)
			otherlv_27='switch'
			{
				newLeafNode(otherlv_27, grammarAccess.getCommandAccess().getSwitchKeyword_3_1());
			}
			otherlv_28='('
			{
				newLeafNode(otherlv_28, grammarAccess.getCommandAccess().getLeftParenthesisKeyword_3_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandAccess().getExpExpressionParserRuleCall_3_3_0());
					}
					lv_exp_29_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandRule());
						}
						set(
							$current,
							"exp",
							lv_exp_29_0,
							"com.poli.compilador.C.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_30=')'
			{
				newLeafNode(otherlv_30, grammarAccess.getCommandAccess().getRightParenthesisKeyword_3_4());
			}
			otherlv_31='{'
			{
				newLeafNode(otherlv_31, grammarAccess.getCommandAccess().getLeftCurlyBracketKeyword_3_5());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandAccess().getCasesCaseParserRuleCall_3_6_0());
					}
					lv_cases_32_0=ruleCase
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandRule());
						}
						add(
							$current,
							"cases",
							lv_cases_32_0,
							"com.poli.compilador.C.Case");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			(
				otherlv_33='default'
				{
					newLeafNode(otherlv_33, grammarAccess.getCommandAccess().getDefaultKeyword_3_7_0());
				}
				otherlv_34=':'
				{
					newLeafNode(otherlv_34, grammarAccess.getCommandAccess().getColonKeyword_3_7_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCommandAccess().getCommandsCommandParserRuleCall_3_7_2_0());
						}
						lv_commands_35_0=ruleCommand
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCommandRule());
							}
							add(
								$current,
								"commands",
								lv_commands_35_0,
								"com.poli.compilador.C.Command");
							afterParserOrEnumRuleCall();
						}
					)
				)*
			)?
			otherlv_36='}'
			{
				newLeafNode(otherlv_36, grammarAccess.getCommandAccess().getRightCurlyBracketKeyword_3_8());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getCommandAccess().getDoWhileCmdAction_4_0(),
						$current);
				}
			)
			otherlv_38='do'
			{
				newLeafNode(otherlv_38, grammarAccess.getCommandAccess().getDoKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandAccess().getCommandsCommandBlockParserRuleCall_4_2_0());
					}
					lv_commands_39_0=ruleCommandBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandRule());
						}
						set(
							$current,
							"commands",
							lv_commands_39_0,
							"com.poli.compilador.C.CommandBlock");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_40='while'
			{
				newLeafNode(otherlv_40, grammarAccess.getCommandAccess().getWhileKeyword_4_3());
			}
			otherlv_41='('
			{
				newLeafNode(otherlv_41, grammarAccess.getCommandAccess().getLeftParenthesisKeyword_4_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandAccess().getExpExpressionParserRuleCall_4_5_0());
					}
					lv_exp_42_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandRule());
						}
						set(
							$current,
							"exp",
							lv_exp_42_0,
							"com.poli.compilador.C.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_43=')'
			{
				newLeafNode(otherlv_43, grammarAccess.getCommandAccess().getRightParenthesisKeyword_4_6());
			}
			otherlv_44=';'
			{
				newLeafNode(otherlv_44, grammarAccess.getCommandAccess().getSemicolonKeyword_4_7());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getCommandAccess().getVarCmdAction_5_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandAccess().getValFactorParserRuleCall_5_1_0());
					}
					lv_val_46_0=ruleFactor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandRule());
						}
						add(
							$current,
							"val",
							lv_val_46_0,
							"com.poli.compilador.C.Factor");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandAccess().getValAssignmentParserRuleCall_5_2_0());
					}
					lv_val_47_0=ruleAssignment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandRule());
						}
						add(
							$current,
							"val",
							lv_val_47_0,
							"com.poli.compilador.C.Assignment");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_48=';'
			{
				newLeafNode(otherlv_48, grammarAccess.getCommandAccess().getSemicolonKeyword_5_3());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getCommandAccess().getBreakCmdAction_6_0(),
						$current);
				}
			)
			otherlv_50='break'
			{
				newLeafNode(otherlv_50, grammarAccess.getCommandAccess().getBreakKeyword_6_1());
			}
			otherlv_51=';'
			{
				newLeafNode(otherlv_51, grammarAccess.getCommandAccess().getSemicolonKeyword_6_2());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getCommandAccess().getContinueCmdAction_7_0(),
						$current);
				}
			)
			otherlv_53='continue'
			{
				newLeafNode(otherlv_53, grammarAccess.getCommandAccess().getContinueKeyword_7_1());
			}
			otherlv_54=';'
			{
				newLeafNode(otherlv_54, grammarAccess.getCommandAccess().getSemicolonKeyword_7_2());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getCommandAccess().getReturnCmdAction_8_0(),
						$current);
				}
			)
			otherlv_56='return'
			{
				newLeafNode(otherlv_56, grammarAccess.getCommandAccess().getReturnKeyword_8_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandAccess().getExpExpressionParserRuleCall_8_2_0());
					}
					lv_exp_57_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandRule());
						}
						add(
							$current,
							"exp",
							lv_exp_57_0,
							"com.poli.compilador.C.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_58=';'
			{
				newLeafNode(otherlv_58, grammarAccess.getCommandAccess().getSemicolonKeyword_8_3());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getDeclarationParserRuleCall_9());
		}
		this_Declaration_59=ruleDeclaration
		{
			$current = $this_Declaration_59.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCommandBlock
entryRuleCommandBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommandBlockRule()); }
	iv_ruleCommandBlock=ruleCommandBlock
	{ $current=$iv_ruleCommandBlock.current; }
	EOF;

// Rule CommandBlock
ruleCommandBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCommandBlockAccess().getCommandBlockAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getCommandBlockAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCommandBlockAccess().getCommandsCommandParserRuleCall_2_0());
				}
				lv_commands_2_0=ruleCommand
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommandBlockRule());
					}
					add(
						$current,
						"commands",
						lv_commands_2_0,
						"com.poli.compilador.C.Command");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getCommandBlockAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleArgument
entryRuleArgument returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgumentRule()); }
	iv_ruleArgument=ruleArgument
	{ $current=$iv_ruleArgument.current; }
	EOF;

// Rule Argument
ruleArgument returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getArgumentAccess().getExpExpressionParserRuleCall_0_0());
				}
				lv_exp_0_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArgumentRule());
					}
					add(
						$current,
						"exp",
						lv_exp_0_0,
						"com.poli.compilador.C.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getArgumentAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getArgumentAccess().getExpExpressionParserRuleCall_1_1_0());
					}
					lv_exp_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArgumentRule());
						}
						add(
							$current,
							"exp",
							lv_exp_2_0,
							"com.poli.compilador.C.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAssignment
entryRuleAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignmentRule()); }
	iv_ruleAssignment=ruleAssignment
	{ $current=$iv_ruleAssignment.current; }
	EOF;

// Rule Assignment
ruleAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='='
		{
			newLeafNode(otherlv_0, grammarAccess.getAssignmentAccess().getEqualsSignKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentAccess().getExpExpressionParserRuleCall_1_0());
				}
				lv_exp_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentRule());
					}
					set(
						$current,
						"exp",
						lv_exp_1_0,
						"com.poli.compilador.C.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionAccess().getArgsRelExpParserRuleCall_0_0());
				}
				lv_args_0_0=ruleRelExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionRule());
					}
					add(
						$current,
						"args",
						lv_args_0_0,
						"com.poli.compilador.C.RelExp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getExpressionAccess().getLogicExpArgsAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_op_2_0=RULE_LO
					{
						newLeafNode(lv_op_2_0, grammarAccess.getExpressionAccess().getOpLOTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"op",
							lv_op_2_0,
							"com.poli.compilador.C.LO");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionAccess().getArgsRelExpParserRuleCall_1_2_0());
					}
					lv_args_3_0=ruleRelExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionRule());
						}
						add(
							$current,
							"args",
							lv_args_3_0,
							"com.poli.compilador.C.RelExp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleRelExp
entryRuleRelExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelExpRule()); }
	iv_ruleRelExp=ruleRelExp
	{ $current=$iv_ruleRelExp.current; }
	EOF;

// Rule RelExp
ruleRelExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRelExpAccess().getArithExpParserRuleCall_0());
		}
		this_ArithExp_0=ruleArithExp
		{
			$current = $this_ArithExp_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getRelExpAccess().getRelExpArgsAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_op_2_0=RULE_RO
					{
						newLeafNode(lv_op_2_0, grammarAccess.getRelExpAccess().getOpROTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRelExpRule());
						}
						setWithLastConsumed(
							$current,
							"op",
							lv_op_2_0,
							"com.poli.compilador.C.RO");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRelExpAccess().getArgsArithExpParserRuleCall_1_2_0());
					}
					lv_args_3_0=ruleArithExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRelExpRule());
						}
						add(
							$current,
							"args",
							lv_args_3_0,
							"com.poli.compilador.C.ArithExp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleArithExp
entryRuleArithExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArithExpRule()); }
	iv_ruleArithExp=ruleArithExp
	{ $current=$iv_ruleArithExp.current; }
	EOF;

// Rule ArithExp
ruleArithExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getArithExpAccess().getTermParserRuleCall_0());
		}
		this_Term_0=ruleTerm
		{
			$current = $this_Term_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getArithExpAccess().getAritmExpArgsAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_op_2_0=RULE_AO1
					{
						newLeafNode(lv_op_2_0, grammarAccess.getArithExpAccess().getOpAO1TerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getArithExpRule());
						}
						setWithLastConsumed(
							$current,
							"op",
							lv_op_2_0,
							"com.poli.compilador.C.AO1");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getArithExpAccess().getArgsTermParserRuleCall_1_2_0());
					}
					lv_args_3_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArithExpRule());
						}
						add(
							$current,
							"args",
							lv_args_3_0,
							"com.poli.compilador.C.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleTerm
entryRuleTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTermRule()); }
	iv_ruleTerm=ruleTerm
	{ $current=$iv_ruleTerm.current; }
	EOF;

// Rule Term
ruleTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTermAccess().getFactorParserRuleCall_0());
		}
		this_Factor_0=ruleFactor
		{
			$current = $this_Factor_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getTermAccess().getTermArgsAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_op_2_0=RULE_AO2
					{
						newLeafNode(lv_op_2_0, grammarAccess.getTermAccess().getOpAO2TerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTermRule());
						}
						setWithLastConsumed(
							$current,
							"op",
							lv_op_2_0,
							"com.poli.compilador.C.AO2");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTermAccess().getArgsFactorParserRuleCall_1_2_0());
					}
					lv_args_3_0=ruleFactor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTermRule());
						}
						add(
							$current,
							"args",
							lv_args_3_0,
							"com.poli.compilador.C.Factor");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleFactor
entryRuleFactor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFactorRule()); }
	iv_ruleFactor=ruleFactor
	{ $current=$iv_ruleFactor.current; }
	EOF;

// Rule Factor
ruleFactor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_uo_0_0=RULE_UO
				{
					newLeafNode(lv_uo_0_0, grammarAccess.getFactorAccess().getUoUOTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFactorRule());
					}
					addWithLastConsumed(
						$current,
						"uo",
						lv_uo_0_0,
						"com.poli.compilador.C.UO");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getFactorAccess().getArgAtomParserRuleCall_1_0());
				}
				lv_arg_1_0=ruleAtom
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFactorRule());
					}
					set(
						$current,
						"arg",
						lv_arg_1_0,
						"com.poli.compilador.C.Atom");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_uo_2_0=RULE_UO
				{
					newLeafNode(lv_uo_2_0, grammarAccess.getFactorAccess().getUoUOTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFactorRule());
					}
					addWithLastConsumed(
						$current,
						"uo",
						lv_uo_2_0,
						"com.poli.compilador.C.UO");
				}
			)
		)?
	)
;

// Entry rule entryRuleAtom
entryRuleAtom returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomRule()); }
	iv_ruleAtom=ruleAtom
	{ $current=$iv_ruleAtom.current; }
	EOF;

// Rule Atom
ruleAtom returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAtomAccess().getLiteralParserRuleCall_0());
		}
		this_Literal_0=ruleLiteral
		{
			$current = $this_Literal_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getAtomAccess().getLeftParenthesisKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getAtomAccess().getExpressionParserRuleCall_1_1());
			}
			this_Expression_2=ruleExpression
			{
				$current = $this_Expression_2.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getAtomAccess().getRightParenthesisKeyword_1_2());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getAtomAccess().getLValueParserRuleCall_2());
		}
		this_lValue_4=rulelValue
		{
			$current = $this_lValue_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulelValue
entryRulelValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLValueRule()); }
	iv_rulelValue=rulelValue
	{ $current=$iv_rulelValue.current; }
	EOF;

// Rule lValue
rulelValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLValueRule());
						}
					}
					otherlv_0=RULE_ID
					{
						newLeafNode(otherlv_0, grammarAccess.getLValueAccess().getValorDefinitionCrossReference_0_0_0());
					}
				)
			)
			(
				(
					otherlv_1='('
					{
						newLeafNode(otherlv_1, grammarAccess.getLValueAccess().getLeftParenthesisKeyword_0_1_0_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getLValueAccess().getArgArgumentParserRuleCall_0_1_0_1_0());
							}
							lv_arg_2_0=ruleArgument
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getLValueRule());
								}
								set(
									$current,
									"arg",
									lv_arg_2_0,
									"com.poli.compilador.C.Argument");
								afterParserOrEnumRuleCall();
							}
						)
					)?
					otherlv_3=')'
					{
						newLeafNode(otherlv_3, grammarAccess.getLValueAccess().getRightParenthesisKeyword_0_1_0_2());
					}
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getLValueAccess().getAccAccessExpParserRuleCall_0_1_1_0());
						}
						lv_acc_4_0=ruleAccessExp
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLValueRule());
							}
							set(
								$current,
								"acc",
								lv_acc_4_0,
								"com.poli.compilador.C.AccessExp");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
		    |
		{
			newCompositeNode(grammarAccess.getLValueAccess().getPointerExpParserRuleCall_1());
		}
		this_PointerExp_5=rulePointerExp
		{
			$current = $this_PointerExp_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePointerExp
entryRulePointerExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPointerExpRule()); }
	iv_rulePointerExp=rulePointerExp
	{ $current=$iv_rulePointerExp.current; }
	EOF;

// Rule PointerExp
rulePointerExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPointerExpAccess().getPointerExpAction_0(),
					$current);
			}
		)
		otherlv_1='**'
		{
			newLeafNode(otherlv_1, grammarAccess.getPointerExpAccess().getAsteriskAsteriskKeyword_1());
		}
		(
			this_ID_2=RULE_ID
			{
				newLeafNode(this_ID_2, grammarAccess.getPointerExpAccess().getIDTerminalRuleCall_2_0());
			}
			    |
			(
				otherlv_3='('
				{
					newLeafNode(otherlv_3, grammarAccess.getPointerExpAccess().getLeftParenthesisKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPointerExpAccess().getExpExpressionParserRuleCall_2_1_1_0());
						}
						lv_exp_4_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPointerExpRule());
							}
							set(
								$current,
								"exp",
								lv_exp_4_0,
								"com.poli.compilador.C.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_5=')'
				{
					newLeafNode(otherlv_5, grammarAccess.getPointerExpAccess().getRightParenthesisKeyword_2_1_2());
				}
			)
		)
	)
;

// Entry rule entryRuleAccessExp
entryRuleAccessExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAccessExpRule()); }
	iv_ruleAccessExp=ruleAccessExp
	{ $current=$iv_ruleAccessExp.current; }
	EOF;

// Rule AccessExp
ruleAccessExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAccessExpAccess().getArrayAccessAction_0_0(),
						$current);
				}
			)
			otherlv_1='['
			{
				newLeafNode(otherlv_1, grammarAccess.getAccessExpAccess().getLeftSquareBracketKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAccessExpAccess().getExpExpressionParserRuleCall_0_2_0());
					}
					lv_exp_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAccessExpRule());
						}
						set(
							$current,
							"exp",
							lv_exp_2_0,
							"com.poli.compilador.C.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_3=']'
			{
				newLeafNode(otherlv_3, grammarAccess.getAccessExpAccess().getRightSquareBracketKeyword_0_3());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAccessExpAccess().getFieldAccessAction_1_0(),
						$current);
				}
			)
			otherlv_5='.'
			{
				newLeafNode(otherlv_5, grammarAccess.getAccessExpAccess().getFullStopKeyword_1_1());
			}
			(
				(
					lv_field_6_0=RULE_ID
					{
						newLeafNode(lv_field_6_0, grammarAccess.getAccessExpAccess().getFieldIDTerminalRuleCall_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAccessExpRule());
						}
						setWithLastConsumed(
							$current,
							"field",
							lv_field_6_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleCase
entryRuleCase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCaseRule()); }
	iv_ruleCase=ruleCase
	{ $current=$iv_ruleCase.current; }
	EOF;

// Rule Case
ruleCase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='case'
		{
			newLeafNode(otherlv_0, grammarAccess.getCaseAccess().getCaseKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCaseAccess().getValAtomParserRuleCall_1_0());
				}
				lv_val_1_0=ruleAtom
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCaseRule());
					}
					set(
						$current,
						"val",
						lv_val_1_0,
						"com.poli.compilador.C.Atom");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getCaseAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCaseAccess().getCommandsCommandParserRuleCall_3_0());
				}
				lv_commands_3_0=ruleCommand
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCaseRule());
					}
					add(
						$current,
						"commands",
						lv_commands_3_0,
						"com.poli.compilador.C.Command");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_tipo_0_0=RULE_TYPELIT
				{
					newLeafNode(lv_tipo_0_0, grammarAccess.getTypeAccess().getTipoTYPELITTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeRule());
					}
					setWithLastConsumed(
						$current,
						"tipo",
						lv_tipo_0_0,
						"com.poli.compilador.C.TYPELIT");
				}
			)
		)
		(
			otherlv_1='['
			{
				newLeafNode(otherlv_1, grammarAccess.getTypeAccess().getLeftSquareBracketKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeAccess().getExpExpressionParserRuleCall_1_1_0());
					}
					lv_exp_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeRule());
						}
						set(
							$current,
							"exp",
							lv_exp_2_0,
							"com.poli.compilador.C.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_3=']'
			{
				newLeafNode(otherlv_3, grammarAccess.getTypeAccess().getRightSquareBracketKeyword_1_2());
			}
		)?
	)
;

// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	iv_ruleLiteral=ruleLiteral
	{ $current=$iv_ruleLiteral.current; }
	EOF;

// Rule Literal
ruleLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getLiteralAccess().getIntLitAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_val_1_0=RULE_INT
					{
						newLeafNode(lv_val_1_0, grammarAccess.getLiteralAccess().getValINTTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLiteralRule());
						}
						setWithLastConsumed(
							$current,
							"val",
							lv_val_1_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getLiteralAccess().getTrueLitAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_val_3_0=RULE_TRUE
					{
						newLeafNode(lv_val_3_0, grammarAccess.getLiteralAccess().getValTRUETerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLiteralRule());
						}
						setWithLastConsumed(
							$current,
							"val",
							lv_val_3_0,
							"com.poli.compilador.C.TRUE");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getLiteralAccess().getFalseLitAction_2_0(),
						$current);
				}
			)
			(
				(
					lv_val_5_0=RULE_FALSE
					{
						newLeafNode(lv_val_5_0, grammarAccess.getLiteralAccess().getValFALSETerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLiteralRule());
						}
						setWithLastConsumed(
							$current,
							"val",
							lv_val_5_0,
							"com.poli.compilador.C.FALSE");
					}
				)
			)
		)
	)
;

RULE_TYPELIT : ('int'|'bool'|'char'|'void');

RULE_TRUE : ('true'|'TRUE');

RULE_FALSE : ('false'|'FALSE');

RULE_AO1 : ('+'|'-');

RULE_AO2 : ('*'|'/');

RULE_RO : ('>'|'>='|'<'|'<='|'=='|'!=');

RULE_LO : ('&&'|'||');

RULE_UO : ('!'|'++'|'--'|'&');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
