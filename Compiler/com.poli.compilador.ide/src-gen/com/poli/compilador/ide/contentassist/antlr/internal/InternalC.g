/*
 * generated by Xtext 2.12.0
 */
grammar InternalC;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package com.poli.compilador.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.poli.compilador.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.poli.compilador.services.CGrammarAccess;

}
@parser::members {
	private CGrammarAccess grammarAccess;

	public void setGrammarAccess(CGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProgram
entryRuleProgram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getDefinitionAssignment()); }
		(rule__Program__DefinitionAssignment)*
		{ after(grammarAccess.getProgramAccess().getDefinitionAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefinition
entryRuleDefinition
:
{ before(grammarAccess.getDefinitionRule()); }
	 ruleDefinition
{ after(grammarAccess.getDefinitionRule()); } 
	 EOF 
;

// Rule Definition
ruleDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefinitionAccess().getAlternatives()); }
		(rule__Definition__Alternatives)
		{ after(grammarAccess.getDefinitionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunction
entryRuleFunction
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getGroup()); }
		(rule__Function__Group__0)
		{ after(grammarAccess.getFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclaration
entryRuleDeclaration
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclarationAccess().getGroup()); }
		(rule__Declaration__Group__0)
		{ after(grammarAccess.getDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommand
entryRuleCommand
:
{ before(grammarAccess.getCommandRule()); }
	 ruleCommand
{ after(grammarAccess.getCommandRule()); } 
	 EOF 
;

// Rule Command
ruleCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandAccess().getAlternatives()); }
		(rule__Command__Alternatives)
		{ after(grammarAccess.getCommandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getDigitOneKeyword()); }
		'1'
		{ after(grammarAccess.getParameterAccess().getDigitOneKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArgument
entryRuleArgument
:
{ before(grammarAccess.getArgumentRule()); }
	 ruleArgument
{ after(grammarAccess.getArgumentRule()); } 
	 EOF 
;

// Rule Argument
ruleArgument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentAccess().getDigitOneKeyword()); }
		'1'
		{ after(grammarAccess.getArgumentAccess().getDigitOneKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignment
entryRuleAssignment
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentAccess().getDigitOneKeyword()); }
		'1'
		{ after(grammarAccess.getAssignmentAccess().getDigitOneKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup()); }
		(rule__Expression__Group__0)
		{ after(grammarAccess.getExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelExp
entryRuleRelExp
:
{ before(grammarAccess.getRelExpRule()); }
	 ruleRelExp
{ after(grammarAccess.getRelExpRule()); } 
	 EOF 
;

// Rule RelExp
ruleRelExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelExpAccess().getGroup()); }
		(rule__RelExp__Group__0)
		{ after(grammarAccess.getRelExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArithExp
entryRuleArithExp
:
{ before(grammarAccess.getArithExpRule()); }
	 ruleArithExp
{ after(grammarAccess.getArithExpRule()); } 
	 EOF 
;

// Rule ArithExp
ruleArithExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArithExpAccess().getGroup()); }
		(rule__ArithExp__Group__0)
		{ after(grammarAccess.getArithExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTerm
entryRuleTerm
:
{ before(grammarAccess.getTermRule()); }
	 ruleTerm
{ after(grammarAccess.getTermRule()); } 
	 EOF 
;

// Rule Term
ruleTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTermAccess().getGroup()); }
		(rule__Term__Group__0)
		{ after(grammarAccess.getTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFactor
entryRuleFactor
:
{ before(grammarAccess.getFactorRule()); }
	 ruleFactor
{ after(grammarAccess.getFactorRule()); } 
	 EOF 
;

// Rule Factor
ruleFactor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFactorAccess().getAlternatives()); }
		(rule__Factor__Alternatives)
		{ after(grammarAccess.getFactorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtom
entryRuleAtom
:
{ before(grammarAccess.getAtomRule()); }
	 ruleAtom
{ after(grammarAccess.getAtomRule()); } 
	 EOF 
;

// Rule Atom
ruleAtom 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomAccess().getAlternatives()); }
		(rule__Atom__Alternatives)
		{ after(grammarAccess.getAtomAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulelValue
entryRulelValue
:
{ before(grammarAccess.getLValueRule()); }
	 rulelValue
{ after(grammarAccess.getLValueRule()); } 
	 EOF 
;

// Rule lValue
rulelValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLValueAccess().getAlternatives()); }
		(rule__LValue__Alternatives)
		{ after(grammarAccess.getLValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePointerExp
entryRulePointerExp
:
{ before(grammarAccess.getPointerExpRule()); }
	 rulePointerExp
{ after(grammarAccess.getPointerExpRule()); } 
	 EOF 
;

// Rule PointerExp
rulePointerExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPointerExpAccess().getGroup()); }
		(rule__PointerExp__Group__0)
		{ after(grammarAccess.getPointerExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getTYPELITTerminalRuleCall()); }
		RULE_TYPELIT
		{ after(grammarAccess.getTypeAccess().getTYPELITTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteral
entryRuleLiteral
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
		(rule__Literal__Alternatives)
		{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getValAssignment_0()); }
		(rule__Definition__ValAssignment_0)
		{ after(grammarAccess.getDefinitionAccess().getValAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionAccess().getDeclarationParserRuleCall_1()); }
		ruleDeclaration
		{ after(grammarAccess.getDefinitionAccess().getDeclarationParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getGroup_0()); }
		(rule__Command__Group_0__0)
		{ after(grammarAccess.getCommandAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getGroup_1()); }
		(rule__Command__Group_1__0)
		{ after(grammarAccess.getCommandAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getGroup_2()); }
		(rule__Command__Group_2__0)
		{ after(grammarAccess.getCommandAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getGroup_3()); }
		(rule__Command__Group_3__0)
		{ after(grammarAccess.getCommandAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getGroup_0()); }
		(rule__Factor__Group_0__0)
		{ after(grammarAccess.getFactorAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getAtomParserRuleCall_1()); }
		ruleAtom
		{ after(grammarAccess.getFactorAccess().getAtomParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomAccess().getLiteralParserRuleCall_0()); }
		ruleLiteral
		{ after(grammarAccess.getAtomAccess().getLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomAccess().getGroup_1()); }
		(rule__Atom__Group_1__0)
		{ after(grammarAccess.getAtomAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getAtomAccess().getLValueParserRuleCall_2()); }
		rulelValue
		{ after(grammarAccess.getAtomAccess().getLValueParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLValueAccess().getGroup_0()); }
		(rule__LValue__Group_0__0)
		{ after(grammarAccess.getLValueAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getLValueAccess().getPointerExpParserRuleCall_1()); }
		rulePointerExp
		{ after(grammarAccess.getLValueAccess().getPointerExpParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getGroup_0()); }
		(rule__Literal__Group_0__0)
		{ after(grammarAccess.getLiteralAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getGroup_1()); }
		(rule__Literal__Group_1__0)
		{ after(grammarAccess.getLiteralAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getGroup_2()); }
		(rule__Literal__Group_2__0)
		{ after(grammarAccess.getLiteralAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getTipoAssignment_0()); }
	(rule__Function__TipoAssignment_0)
	{ after(grammarAccess.getFunctionAccess().getTipoAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
	(rule__Function__NameAssignment_1)
	{ after(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__3__Impl
	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getParamsAssignment_3()); }
	(rule__Function__ParamsAssignment_3)?
	{ after(grammarAccess.getFunctionAccess().getParamsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__4__Impl
	rule__Function__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__5__Impl
	rule__Function__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getFunctionAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__6__Impl
	rule__Function__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getCommandsAssignment_6()); }
	(rule__Function__CommandsAssignment_6)*
	{ after(grammarAccess.getFunctionAccess().getCommandsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getFunctionAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group__0__Impl
	rule__Declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationAccess().getTipoAssignment_0()); }
	(rule__Declaration__TipoAssignment_0)
	{ after(grammarAccess.getDeclarationAccess().getTipoAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group__1__Impl
	rule__Declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationAccess().getNameAssignment_1()); }
	(rule__Declaration__NameAssignment_1)*
	{ after(grammarAccess.getDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationAccess().getAsgAssignment_2()); }
	(rule__Declaration__AsgAssignment_2)
	{ after(grammarAccess.getDeclarationAccess().getAsgAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group_0__0__Impl
	rule__Command__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getCommandAction_0_0()); }
	()
	{ after(grammarAccess.getCommandAccess().getCommandAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group_0__1__Impl
	rule__Command__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getIfKeyword_0_1()); }
	'if'
	{ after(grammarAccess.getCommandAccess().getIfKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group_0__2__Impl
	rule__Command__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getLeftParenthesisKeyword_0_2()); }
	'('
	{ after(grammarAccess.getCommandAccess().getLeftParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group_0__3__Impl
	rule__Command__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getExpAssignment_0_3()); }
	(rule__Command__ExpAssignment_0_3)
	{ after(grammarAccess.getCommandAccess().getExpAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group_0__4__Impl
	rule__Command__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getRightParenthesisKeyword_0_4()); }
	')'
	{ after(grammarAccess.getCommandAccess().getRightParenthesisKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group_0__5__Impl
	rule__Command__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getLeftCurlyBracketKeyword_0_5()); }
	'{'
	{ after(grammarAccess.getCommandAccess().getLeftCurlyBracketKeyword_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group_0__6__Impl
	rule__Command__Group_0__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getCommandsAssignment_0_6()); }
	(rule__Command__CommandsAssignment_0_6)*
	{ after(grammarAccess.getCommandAccess().getCommandsAssignment_0_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group_0__7__Impl
	rule__Command__Group_0__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getRightCurlyBracketKeyword_0_7()); }
	'}'
	{ after(grammarAccess.getCommandAccess().getRightCurlyBracketKeyword_0_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group_0__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getGroup_0_8()); }
	(rule__Command__Group_0_8__0)?
	{ after(grammarAccess.getCommandAccess().getGroup_0_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_0_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group_0_8__0__Impl
	rule__Command__Group_0_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getElseKeyword_0_8_0()); }
	'else'
	{ after(grammarAccess.getCommandAccess().getElseKeyword_0_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group_0_8__1__Impl
	rule__Command__Group_0_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getLeftCurlyBracketKeyword_0_8_1()); }
	'{'
	{ after(grammarAccess.getCommandAccess().getLeftCurlyBracketKeyword_0_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group_0_8__2__Impl
	rule__Command__Group_0_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getCommandsAssignment_0_8_2()); }
	(rule__Command__CommandsAssignment_0_8_2)*
	{ after(grammarAccess.getCommandAccess().getCommandsAssignment_0_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0_8__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group_0_8__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0_8__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getRightCurlyBracketKeyword_0_8_3()); }
	'}'
	{ after(grammarAccess.getCommandAccess().getRightCurlyBracketKeyword_0_8_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group_1__0__Impl
	rule__Command__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getCommandAction_1_0()); }
	()
	{ after(grammarAccess.getCommandAccess().getCommandAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group_1__1__Impl
	rule__Command__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getBreakKeyword_1_1()); }
	'break'
	{ after(grammarAccess.getCommandAccess().getBreakKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getSemicolonKeyword_1_2()); }
	';'
	{ after(grammarAccess.getCommandAccess().getSemicolonKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group_2__0__Impl
	rule__Command__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getCommandAction_2_0()); }
	()
	{ after(grammarAccess.getCommandAccess().getCommandAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group_2__1__Impl
	rule__Command__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getContinueKeyword_2_1()); }
	'continue'
	{ after(grammarAccess.getCommandAccess().getContinueKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getSemicolonKeyword_2_2()); }
	';'
	{ after(grammarAccess.getCommandAccess().getSemicolonKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group_3__0__Impl
	rule__Command__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getCommandAction_3_0()); }
	()
	{ after(grammarAccess.getCommandAccess().getCommandAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group_3__1__Impl
	rule__Command__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getReturnKeyword_3_1()); }
	'return'
	{ after(grammarAccess.getCommandAccess().getReturnKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group_3__2__Impl
	rule__Command__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getExpAssignment_3_2()); }
	(rule__Command__ExpAssignment_3_2)?
	{ after(grammarAccess.getCommandAccess().getExpAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getSemicolonKeyword_3_3()); }
	';'
	{ after(grammarAccess.getCommandAccess().getSemicolonKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getArgsAssignment_0()); }
	(rule__Expression__ArgsAssignment_0)
	{ after(grammarAccess.getExpressionAccess().getArgsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
	(rule__Expression__Group_1__0)*
	{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getLogicExpArgsAction_1_0()); }
	()
	{ after(grammarAccess.getExpressionAccess().getLogicExpArgsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__1__Impl
	rule__Expression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getValAssignment_1_1()); }
	(rule__Expression__ValAssignment_1_1)
	{ after(grammarAccess.getExpressionAccess().getValAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getArgsAssignment_1_2()); }
	(rule__Expression__ArgsAssignment_1_2)
	{ after(grammarAccess.getExpressionAccess().getArgsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelExp__Group__0__Impl
	rule__RelExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelExpAccess().getArithExpParserRuleCall_0()); }
	ruleArithExp
	{ after(grammarAccess.getRelExpAccess().getArithExpParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelExpAccess().getGroup_1()); }
	(rule__RelExp__Group_1__0)?
	{ after(grammarAccess.getRelExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelExp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelExp__Group_1__0__Impl
	rule__RelExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelExpAccess().getRelExpArgsAction_1_0()); }
	()
	{ after(grammarAccess.getRelExpAccess().getRelExpArgsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelExp__Group_1__1__Impl
	rule__RelExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelExpAccess().getValAssignment_1_1()); }
	(rule__RelExp__ValAssignment_1_1)
	{ after(grammarAccess.getRelExpAccess().getValAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExp__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelExp__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExp__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelExpAccess().getArgsAssignment_1_2()); }
	(rule__RelExp__ArgsAssignment_1_2)
	{ after(grammarAccess.getRelExpAccess().getArgsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArithExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithExp__Group__0__Impl
	rule__ArithExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithExpAccess().getTermParserRuleCall_0()); }
	ruleTerm
	{ after(grammarAccess.getArithExpAccess().getTermParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithExpAccess().getGroup_1()); }
	(rule__ArithExp__Group_1__0)*
	{ after(grammarAccess.getArithExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArithExp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithExp__Group_1__0__Impl
	rule__ArithExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithExp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithExpAccess().getAritmExpArgsAction_1_0()); }
	()
	{ after(grammarAccess.getArithExpAccess().getAritmExpArgsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithExp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithExp__Group_1__1__Impl
	rule__ArithExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithExp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithExpAccess().getValAssignment_1_1()); }
	(rule__ArithExp__ValAssignment_1_1)
	{ after(grammarAccess.getArithExpAccess().getValAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithExp__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithExp__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithExp__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithExpAccess().getArgsAssignment_1_2()); }
	(rule__ArithExp__ArgsAssignment_1_2)
	{ after(grammarAccess.getArithExpAccess().getArgsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group__0__Impl
	rule__Term__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getFactorParserRuleCall_0()); }
	ruleFactor
	{ after(grammarAccess.getTermAccess().getFactorParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getGroup_1()); }
	(rule__Term__Group_1__0)*
	{ after(grammarAccess.getTermAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__0__Impl
	rule__Term__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getTermArgsAction_1_0()); }
	()
	{ after(grammarAccess.getTermAccess().getTermArgsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__1__Impl
	rule__Term__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getValAssignment_1_1()); }
	(rule__Term__ValAssignment_1_1)
	{ after(grammarAccess.getTermAccess().getValAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getArgsAssignment_1_2()); }
	(rule__Term__ArgsAssignment_1_2)
	{ after(grammarAccess.getTermAccess().getArgsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_0__0__Impl
	rule__Factor__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getUnaryExpAction_0_0()); }
	()
	{ after(grammarAccess.getFactorAccess().getUnaryExpAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_0__1__Impl
	rule__Factor__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getValAssignment_0_1()); }
	(rule__Factor__ValAssignment_0_1)
	{ after(grammarAccess.getFactorAccess().getValAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getArgsAssignment_0_2()); }
	(rule__Factor__ArgsAssignment_0_2)
	{ after(grammarAccess.getFactorAccess().getArgsAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atom__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atom__Group_1__0__Impl
	rule__Atom__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getAtomAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atom__Group_1__1__Impl
	rule__Atom__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomAccess().getExpressionParserRuleCall_1_1()); }
	ruleExpression
	{ after(grammarAccess.getAtomAccess().getExpressionParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atom__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getAtomAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LValue__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LValue__Group_0__0__Impl
	rule__LValue__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LValue__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLValueAccess().getIDValAction_0_0()); }
	()
	{ after(grammarAccess.getLValueAccess().getIDValAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LValue__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LValue__Group_0__1__Impl
	rule__LValue__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LValue__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLValueAccess().getValAssignment_0_1()); }
	(rule__LValue__ValAssignment_0_1)
	{ after(grammarAccess.getLValueAccess().getValAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LValue__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LValue__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LValue__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLValueAccess().getGroup_0_2()); }
	(rule__LValue__Group_0_2__0)?
	{ after(grammarAccess.getLValueAccess().getGroup_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LValue__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LValue__Group_0_2__0__Impl
	rule__LValue__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LValue__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLValueAccess().getLeftParenthesisKeyword_0_2_0()); }
	'('
	{ after(grammarAccess.getLValueAccess().getLeftParenthesisKeyword_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LValue__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LValue__Group_0_2__1__Impl
	rule__LValue__Group_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LValue__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLValueAccess().getArgumentParserRuleCall_0_2_1()); }
	ruleArgument
	{ after(grammarAccess.getLValueAccess().getArgumentParserRuleCall_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LValue__Group_0_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LValue__Group_0_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LValue__Group_0_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLValueAccess().getRightParenthesisKeyword_0_2_2()); }
	')'
	{ after(grammarAccess.getLValueAccess().getRightParenthesisKeyword_0_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PointerExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PointerExp__Group__0__Impl
	rule__PointerExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PointerExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointerExpAccess().getAsteriskAsteriskKeyword_0()); }
	'**'
	{ after(grammarAccess.getPointerExpAccess().getAsteriskAsteriskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PointerExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PointerExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PointerExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointerExpAccess().getPtrAssignment_1()); }
	(rule__PointerExp__PtrAssignment_1)
	{ after(grammarAccess.getPointerExpAccess().getPtrAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_0__0__Impl
	rule__Literal__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getIntLitAction_0_0()); }
	()
	{ after(grammarAccess.getLiteralAccess().getIntLitAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getValorAssignment_0_1()); }
	(rule__Literal__ValorAssignment_0_1)
	{ after(grammarAccess.getLiteralAccess().getValorAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_1__0__Impl
	rule__Literal__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getTrueLitAction_1_0()); }
	()
	{ after(grammarAccess.getLiteralAccess().getTrueLitAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getValAssignment_1_1()); }
	(rule__Literal__ValAssignment_1_1)
	{ after(grammarAccess.getLiteralAccess().getValAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_2__0__Impl
	rule__Literal__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getFalseLitAction_2_0()); }
	()
	{ after(grammarAccess.getLiteralAccess().getFalseLitAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getValAssignment_2_1()); }
	(rule__Literal__ValAssignment_2_1)
	{ after(grammarAccess.getLiteralAccess().getValAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__DefinitionAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getDefinitionDefinitionParserRuleCall_0()); }
		ruleDefinition
		{ after(grammarAccess.getProgramAccess().getDefinitionDefinitionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__ValAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getValFunctionParserRuleCall_0_0()); }
		ruleFunction
		{ after(grammarAccess.getDefinitionAccess().getValFunctionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__TipoAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getTipoTypeParserRuleCall_0_0()); }
		ruleType
		{ after(grammarAccess.getFunctionAccess().getTipoTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ParamsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getParamsParameterParserRuleCall_3_0()); }
		ruleParameter
		{ after(grammarAccess.getFunctionAccess().getParamsParameterParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__CommandsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getCommandsCommandParserRuleCall_6_0()); }
		ruleCommand
		{ after(grammarAccess.getFunctionAccess().getCommandsCommandParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__TipoAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getTipoTypeParserRuleCall_0_0()); }
		ruleType
		{ after(grammarAccess.getDeclarationAccess().getTipoTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__AsgAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getAsgAssignmentParserRuleCall_2_0()); }
		ruleAssignment
		{ after(grammarAccess.getDeclarationAccess().getAsgAssignmentParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__ExpAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getExpExpressionParserRuleCall_0_3_0()); }
		ruleExpression
		{ after(grammarAccess.getCommandAccess().getExpExpressionParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__CommandsAssignment_0_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getCommandsCommandParserRuleCall_0_6_0()); }
		ruleCommand
		{ after(grammarAccess.getCommandAccess().getCommandsCommandParserRuleCall_0_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__CommandsAssignment_0_8_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getCommandsCommandParserRuleCall_0_8_2_0()); }
		ruleCommand
		{ after(grammarAccess.getCommandAccess().getCommandsCommandParserRuleCall_0_8_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__ExpAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getExpExpressionParserRuleCall_3_2_0()); }
		ruleExpression
		{ after(grammarAccess.getCommandAccess().getExpExpressionParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ArgsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getArgsRelExpParserRuleCall_0_0()); }
		ruleRelExp
		{ after(grammarAccess.getExpressionAccess().getArgsRelExpParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ValAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getValLOTerminalRuleCall_1_1_0()); }
		RULE_LO
		{ after(grammarAccess.getExpressionAccess().getValLOTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ArgsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getArgsRelExpParserRuleCall_1_2_0()); }
		ruleRelExp
		{ after(grammarAccess.getExpressionAccess().getArgsRelExpParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExp__ValAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelExpAccess().getValROTerminalRuleCall_1_1_0()); }
		RULE_RO
		{ after(grammarAccess.getRelExpAccess().getValROTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExp__ArgsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelExpAccess().getArgsArithExpParserRuleCall_1_2_0()); }
		ruleArithExp
		{ after(grammarAccess.getRelExpAccess().getArgsArithExpParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithExp__ValAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithExpAccess().getValAO1TerminalRuleCall_1_1_0()); }
		RULE_AO1
		{ after(grammarAccess.getArithExpAccess().getValAO1TerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithExp__ArgsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithExpAccess().getArgsTermParserRuleCall_1_2_0()); }
		ruleTerm
		{ after(grammarAccess.getArithExpAccess().getArgsTermParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__ValAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getValAO2TerminalRuleCall_1_1_0()); }
		RULE_AO2
		{ after(grammarAccess.getTermAccess().getValAO2TerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__ArgsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getArgsFactorParserRuleCall_1_2_0()); }
		ruleFactor
		{ after(grammarAccess.getTermAccess().getArgsFactorParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__ValAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getValUOTerminalRuleCall_0_1_0()); }
		RULE_UO
		{ after(grammarAccess.getFactorAccess().getValUOTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__ArgsAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getArgsAtomParserRuleCall_0_2_0()); }
		ruleAtom
		{ after(grammarAccess.getFactorAccess().getArgsAtomParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LValue__ValAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLValueAccess().getValIDTerminalRuleCall_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getLValueAccess().getValIDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PointerExp__PtrAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointerExpAccess().getPtrAtomParserRuleCall_1_0()); }
		ruleAtom
		{ after(grammarAccess.getPointerExpAccess().getPtrAtomParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ValorAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getValorINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getLiteralAccess().getValorINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ValAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getValTRUETerminalRuleCall_1_1_0()); }
		RULE_TRUE
		{ after(grammarAccess.getLiteralAccess().getValTRUETerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ValAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getValFALSETerminalRuleCall_2_1_0()); }
		RULE_FALSE
		{ after(grammarAccess.getLiteralAccess().getValFALSETerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_TYPELIT : ('int'|'bool'|'char'|'void');

RULE_TRUE : 'true';

RULE_FALSE : 'false';

RULE_AO1 : ('+'|'-');

RULE_AO2 : ('*'|'/');

RULE_RO : ('>'|'>='|'<'|'<='|'=='|'!=');

RULE_LO : ('&&'|'||');

RULE_UO : ('~'|'++'|'--'|'&');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
